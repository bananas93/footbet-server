{"version":3,"file":"static/js/396.91dfb9c0.chunk.js","mappings":"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","sources":["webpack://client/./src/components/Card/index.module.scss?78fc","components/Card/index.js","webpack://client/./src/components/Input/index.module.scss?bca5","components/Input/index.js","webpack://client/./src/blocks/Login/SignIn/index.module.scss?cd1b","blocks/Login/SignIn/index.js","webpack://client/./src/blocks/Login/SignUp/index.module.scss?3876","blocks/Login/SignUp/index.js","webpack://client/./src/views/LoginPage/index.module.scss?bedd","views/LoginPage/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__4-jbm\",\"cardTitle\":\"Card_cardTitle__d6oQG\",\"cardBody\":\"Card_cardBody__AWMIx\",\"cardBodyWithoutTitle\":\"Card_cardBodyWithoutTitle__KoSil\",\"cardAction\":\"Card_cardAction__X9Ik5\",\"cardMatchDate\":\"Card_cardMatchDate__ruzTr\",\"noMobileShadow\":\"Card_noMobileShadow__2UZHa\"};","import PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport styles from './index.module.scss';\n\nconst Card = ({\n  title, action, style, titleStyle, noMobileShadow, children,\n}) => (\n  <div className={cn(styles.card, { [styles.noMobileShadow]: noMobileShadow })} style={style}>\n    {title && (\n      <div className={styles.cardTitle} style={titleStyle}>\n        <span>{title}</span>\n        {action && (\n          <div className={styles.cardAction}>{action}</div>\n        )}\n      </div>\n    )}\n    <div className={cn(styles.cardBody, { [styles.cardBodyWithoutTitle]: !title })}>\n      {children}\n    </div>\n  </div>\n);\n\nCard.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  style: PropTypes.object,\n  titleStyle: PropTypes.object,\n  noMobileShadow: PropTypes.bool,\n  action: PropTypes.node,\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__s4ezt\",\"inputError\":\"Input_inputError__Mk+NW\",\"inputReadOnly\":\"Input_inputReadOnly__MvJlc\",\"label\":\"Input_label__2youZ\",\"labelReadOnly\":\"Input_labelReadOnly__OY5tx\",\"error\":\"Input_error__2a+t8\"};","import PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport styles from './index.module.scss';\n\nconst Input = ({\n  type, value, error, id, name, placeholder, label, readOnly, onChange, onFocus, onBlur,\n}) => (\n  <>\n    {label && (\n      <label\n        className={cn(styles.label, { [styles.labelReadOnly]: readOnly })}\n        htmlFor={name}\n      >\n        {label}\n      </label>\n    )}\n    <input\n      type={type}\n      value={value}\n      id={id}\n      name={name}\n      placeholder={placeholder}\n      className={cn(styles.input, { [styles.inputError]: error, [styles.inputReadOnly]: readOnly })}\n      readOnly={readOnly}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      onChange={onChange}\n    />\n    {error && (\n      <div className={styles.error}>{error}</div>\n    )}\n  </>\n);\n\nInput.propTypes = {\n  type: PropTypes.string,\n  value: PropTypes.string,\n  error: PropTypes.string,\n  label: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  placeholder: PropTypes.string,\n  readOnly: PropTypes.bool,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nexport default {\"google\":\"SignIn_google__KM6RS\",\"googleImg\":\"SignIn_googleImg__f55Pl\",\"googleText\":\"SignIn_googleText__QTuRu\",\"inputWrap\":\"SignIn_inputWrap__GPqcy\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport Card from '../../../components/Card';\nimport Button from '../../../components/Button';\nimport { login } from '../../../api/auth';\nimport { checkIsEmailValid, setCookie } from '../../../helpers/authHelper';\nimport Input from '../../../components/Input';\nimport styles from './index.module.scss';\n\nconst SignIn = () => {\n  const [loading, setLoading] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n\n  const onInputChange = (type, value) => {\n    if (type === 'email') {\n      setEmail(value);\n    }\n    if (type === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const signIn = async (e) => {\n    e.preventDefault();\n    const isEmailValid = checkIsEmailValid(email);\n    if (!isEmailValid) {\n      setEmailError('Некоректна email адреса');\n      return;\n    }\n    if (!emailError && !passwordError) {\n      try {\n        setLoading(true);\n        const res = await login({ email, password });\n        if (res.status && res.status === 200) {\n          const { token } = res.data;\n          setCookie('JWToken', token, {\n            expires: new Date(Date.now() + 10 * 604800000),\n            path: '/',\n          });\n          setLoading(false);\n          window.location.href = `${window.location.origin}/profile`;\n        }\n      } catch (error) {\n        setLoading(false);\n        if (error.response.data === 'Користувача не знайдено') {\n          setEmailError('Користувача не знайдено');\n        }\n        if (error.response.data === 'Невірний пароль') {\n          setPasswordError('Невірний пароль');\n        } else {\n          const err = error.response.data || error.message;\n          toast.error(err, 3000);\n        }\n      }\n    }\n  };\n\n  return (\n    <Card title=\"Вхід\">\n      <div className={styles.google}>\n        <a className=\"sign-google\" href={`${process.env.REACT_APP_BASE_URL}/api/auth/google`}>\n          <span className={styles.googleImg}><img width=\"30\" src=\"/google.svg\" alt=\"google\" /></span>\n          <span className={styles.googleText}>Увійти за допомогою Google</span>\n        </a>\n      </div>\n      <form method=\"POST\" noValidate onSubmit={signIn}>\n        <div className={styles.inputWrap}>\n          <Input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            label=\"Введіть email\"\n            error={emailError}\n            value={email}\n            onChange={(e) => onInputChange('email', e.target.value)}\n            onFocus={() => setEmailError('')}\n          />\n        </div>\n        <div className={styles.inputWrap}>\n          <Input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Пароль\"\n            label=\"Введіть пароль\"\n            error={passwordError}\n            value={password}\n            onChange={(e) => onInputChange('password', e.target.value)}\n            onFocus={() => setPasswordError('')}\n          />\n        </div>\n        <div className={styles.inputWrap}>\n          <Button type=\"submit\" variant=\"primary\" isLoading={loading} isDisabled={!email && !password}>\n            {loading ? 'Вхід...' : 'Вхід'}\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default SignIn;\n","// extracted by mini-css-extract-plugin\nexport default {\"google\":\"SignUp_google__pZcio\",\"googleImg\":\"SignUp_googleImg__kcj-I\",\"googleText\":\"SignUp_googleText__GLb6b\",\"inputWrap\":\"SignUp_inputWrap__tB4gT\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport Card from '../../../components/Card';\nimport { register } from '../../../api/auth';\nimport Button from '../../../components/Button';\nimport { checkIsEmailValid } from '../../../helpers/authHelper';\nimport Input from '../../../components/Input';\nimport styles from './index.module.scss';\n\nconst SignUp = () => {\n  const [loading, setLoading] = useState(false);\n  const [formValues, setFormValues] = useState(['', '', '', '']);\n  const [formErrors, setFormErrors] = useState(['', '', '', '']);\n\n  const isValid = () => {\n    const formErrorsNew = [...formErrors];\n\n    const isEmailValid = checkIsEmailValid(formValues[0]);\n    const isConfirmPassValid = formValues[3] && formValues[2] === formValues[3];\n\n    if (!isEmailValid) formErrorsNew[0] = 'Некоректна email адреса';\n    if (!isConfirmPassValid) {\n      formErrorsNew[2] = ' ';\n      formErrorsNew[3] = 'Паролі не співпадають';\n    }\n    if (!formValues[1]) formErrorsNew[1] = 'Ім\\'я обов\\'язкове';\n\n    formErrorsNew.length && setFormErrors(formErrorsNew);\n\n    return !formErrorsNew.some((i) => i);\n  };\n\n  const signUp = async (e) => {\n    e.preventDefault();\n    if (isValid()) {\n      const values = {\n        email: formValues[0],\n        name: formValues[1],\n        password: formValues[2],\n      };\n      try {\n        const res = await register(values);\n        if (res && res.status === 201) {\n          window.location.reload();\n        }\n      } catch (error) {\n        setLoading(false);\n        const err = error.response.data || error.message;\n        toast.error(err, 3000);\n      }\n    }\n  };\n\n  const onInputChange = (value, index) => {\n    const formValuesNew = formValues.map((i, ind) => (index === ind ? value.trim() : i));\n    setFormValues(formValuesNew);\n  };\n\n  const onClearError = (index) => {\n    if (!formErrors[index]) return;\n    const formErrorsNew = formErrors.map((i, ind) => (ind === index ? '' : i));\n    setFormErrors(formErrorsNew);\n  };\n\n  return (\n    <Card title=\"Реєстрація\">\n      <div className={styles.google}>\n        <a className=\"sign-google\" href={`${process.env.REACT_APP_BASE_URL}/api/auth/google`}>\n          <span className={styles.googleImg}><img width=\"30\" src=\"/google.svg\" alt=\"google\" /></span>\n          <span className={styles.googleText}>Увійти за допомогою Google</span>\n        </a>\n      </div>\n      <form method=\"POST\" noValidate onSubmit={signUp}>\n        <div className={styles.inputWrap}>\n          <Input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            label=\"Введіть email\"\n            error={formErrors[0]}\n            value={formValues[0]}\n            onChange={(e) => onInputChange(e.target.value, 0)}\n            onFocus={() => onClearError(0)}\n          />\n        </div>\n        <div className={styles.inputWrap}>\n          <Input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"Ім'я\"\n            label=\"Введіть ім'я\"\n            error={formErrors[1]}\n            value={formValues[1]}\n            onChange={(e) => onInputChange(e.target.value, 1)}\n            onFocus={() => onClearError(1)}\n          />\n        </div>\n        <div className={styles.inputWrap}>\n          <Input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Пароль\"\n            label=\"Введіть пароль\"\n            error={formErrors[2]}\n            value={formValues[2]}\n            onChange={(e) => onInputChange(e.target.value, 2)}\n            onFocus={() => onClearError(2)}\n          />\n        </div>\n        <div className={styles.inputWrap}>\n          <Input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Підтведити пароль\"\n            label=\"Підтведіть пароль\"\n            error={formErrors[3]}\n            value={formValues[3]}\n            onChange={(e) => onInputChange(e.target.value, 3)}\n            onFocus={() => onClearError(3)}\n          />\n        </div>\n        <div className={styles.inputWrap}>\n          <Button type=\"submit\" variant=\"primary\" isLoading={loading}>\n            {loading ? 'Реєстрація...' : 'Реєстрація'}\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default SignUp;\n","// extracted by mini-css-extract-plugin\nexport default {\"login\":\"LoginPage_login__26O2H\"};","import {\n  Tab, Tabs, TabList, TabPanel,\n} from 'react-tabs';\nimport { useContext, useEffect } from 'react';\nimport SignIn from '../../blocks/Login/SignIn';\nimport SignUp from '../../blocks/Login/SignUp';\nimport { TitleContext } from '../../utils/contexts';\nimport styles from './index.module.scss';\n\nconst LoginPage = () => {\n  const { setTitle } = useContext(TitleContext);\n  useEffect(() => {\n    setTitle('Вхід/Реєстрація');\n  }, [setTitle]);\n\n  return (\n    <div className={styles.login}>\n      <Tabs>\n        <TabList>\n          <Tab>Вхід</Tab>\n          <Tab>Реєстрація</Tab>\n        </TabList>\n        <TabPanel>\n          <SignIn />\n        </TabPanel>\n        <TabPanel>\n          <SignUp />\n        </TabPanel>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["title","action","style","titleStyle","noMobileShadow","children","className","cn","styles","type","value","error","id","name","placeholder","label","readOnly","onChange","onFocus","onBlur","htmlFor","useState","loading","setLoading","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","onInputChange","signIn","e","preventDefault","checkIsEmailValid","login","res","status","token","data","setCookie","expires","Date","now","path","window","location","href","origin","response","err","message","toast","Card","process","width","src","alt","method","noValidate","onSubmit","Input","target","Button","variant","isLoading","isDisabled","formValues","setFormValues","formErrors","setFormErrors","isValid","formErrorsNew","isEmailValid","isConfirmPassValid","length","some","i","signUp","values","register","reload","index","formValuesNew","map","ind","trim","onClearError","setTitle","useContext","TitleContext","useEffect"],"sourceRoot":""}